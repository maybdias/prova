'''
class FiguraGeometrica:
    ct = 0

    def __init__(self, cor):
        self.cor = cor
        FiguraGeometrica.ct += 1

    def get_cor(self):
        return self.cor

    def contador(self):
        print("Quantidade de objetos instanciados:", FiguraGeometrica.ct)


class Retangulo(FiguraGeometrica):
    def __init__(self, cor, base=0, altura=0):
        super().__init__(cor)
        self.base = base
        self.altura = altura

    def get_base(self):
        return self.base

    def set_altura(self, nova_altura):
        self.altura = nova_altura

    def area(self):
        areaobj = self.base * self.altura
        print("Área do objeto:", areaobj)
        return areaobj

    def mostra_dados(self):
        print("Cor:", self.cor)
        print("Base:", self.base)
        print("Altura:", self.altura)


class Circulo(FiguraGeometrica):
    def __init__(self, cor, raio=0):
        super().__init__(cor)
        self.raio = raio

    def set_raio(self, novo_raio):
        if novo_raio <= 0:
            print("Não é possível calcular raio com 0 ou valores negativos")
        else:
            self.raio = novo_raio

    def perimetro(self):
        perimetro = 2 * self.raio * 3.14
        return perimetro


if __name__ == '__main__':
    f1 = Retangulo("Rosa", 4, 5)
    print("Retângulo 1:\n")
    f1.mostra_dados()
    f1.area()
    print("Base do Retângulo:", f1.get_base())
    print("Valores com nova altura:")
    f1.set_altura(10)
    f1.mostra_dados()
    f1.area()
    f1.contador()

    f2 = Circulo("Verde")
    print("Cor do Circulo:", f2.get_cor())

    f3 = Circulo("Azul", 3)
    print("Perímetro do Círculo:", f3.perimetro())
    f3.set_raio(5)
    print("Perímetro do novo Círculo:", f3.perimetro())
    f3.contador()
'''

import mysql.connector

def create_database():
    conexao_db = mysql.connector.connect(user='root', password='ceub123456', host='127.0.0.1')
    print('Conexão db:', conexao_db)
    cursor_db = conexao_db.cursor()
    sql = "CREATE DATABASE if not exists db_loja"
    cursor_db.execute(sql)
    cursor_db.close()
    conexao_db.close()
    print('\nConexão Fechada')

def create_connection():
    con = mysql.connector.connect(user='root', password='ceub123456', host='127.0.0.1', database='db_loja')
    print('Conexao:', con)
    return con

def close_connection(cursor, conexao):
    cursor.close()
    conexao.close()
    print('Conexao Fechada')

def create_table(cursor):
    sql = """CREATE TABLE if not exists tb_veiculos(
    placa INT NOT NULL,
    nome VARCHAR(45) NOT NULL,
    preco DECIMAL(10, 2),
    PRIMARY KEY (placa)
    ) """
    cursor.execute(sql)

def insert_table(cursor, conexao):
    placa = int(input("Digite a placa de 4 números: "))
    nome = input("Digite o nome do veículo: ")
    preco = float(input("Digite o preço do veículo: "))
    sql = """INSERT INTO tb_veiculos (placa, nome, preco)
             VALUES (%s, %s, %s)"""
    cursor.execute(sql, (placa, nome, preco))
    conexao.commit()

if __name__ == "__main__":
    try:
        create_database()
        conexao = create_connection()
        cursor = conexao.cursor()
        create_table(cursor)
        insert_table(cursor, conexao)
    except mysql.connector.Error as err:
        print(f"Erro: {err}")
    finally:
        close_connection(cursor, conexao)
